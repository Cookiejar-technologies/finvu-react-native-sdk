{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Reexport the native module. On web, it will be resolved to FinvuModule.web.ts\n// and on native platforms to FinvuModule.ts\nimport { EventEmitter, NativeModulesProxy, EventSubscription } from 'expo-modules-core';\nimport FinvuModule from './FinvuModule';\nimport type { FinvuConfig } from './Finvu.types';\n\n// Define the event types for the EventEmitter\ntype FinvuEvents = {\n  onChange: any; // Replace `any` with the actual type of the event payload if known\n};\n\nconst emitter = new EventEmitter<FinvuEvents>(\n  (FinvuModule as any).addListener ? (FinvuModule as any) : NativeModulesProxy.Finvu\n);\n\nexport async function initializeWith(config: FinvuConfig) {\n  try {\n    console.log('Initializing Finvu with config:', config);\n    await FinvuModule.initializeWith(config);\n    console.log('Finvu initialized successfully');\n  } catch (e) {\n    console.error('Initialization failed:', e);\n  }\n}\n\nexport async function connect() {\n  try {\n    console.log('Connecting...');\n    const result = await FinvuModule.connect();\n    console.log('Connected successfully:', result);\n    return result;\n  } catch (e) {\n    console.error('Connection failed:', e);\n    return undefined;\n    }\n}\n\nexport async function loginWithUsernameOrMobileNumber(username: string, mobileNumber: string, consentHandleId: string) {\n  try {\n    console.log('Logging in...');\n    const result = await FinvuModule.loginWithUsernameOrMobileNumber(username, mobileNumber, consentHandleId);\n    console.log('Login success, reference:', result.reference);\n    return result;\n  } catch (e) {\n    console.error('Login failed:', e);\n    return undefined;\n  }\n}\n\nexport async function verifyLoginOtp(otp: string, otpReference: string) {\n  try {\n    console.log('Verifying OTP...');\n    const result = await FinvuModule.verifyLoginOtp(otp, otpReference);\n    console.log('OTP verified, userId:', result.userId);\n    return result;\n  } catch (e) {\n    console.error('OTP verification failed:', e);\n    return undefined;\n  }\n}\n\nexport async function fipsAllFIPOptions() {\n  try {\n    return await FinvuModule.fipsAllFIPOptions();\n  } catch (e) {\n    console.error('Fetching FIPs failed:', e);\n    return undefined;\n  }\n}\n\nexport async function fetchLinkedAccounts() {\n  try {\n    return await FinvuModule.fetchLinkedAccounts();\n  } catch (e) {\n    console.error('Fetching linked accounts failed:', e);\n    return undefined;\n  }\n}\n\nexport async function discoverAccounts(fipId: string, fiTypes: string[], mobileNumber: string) {\n  try {\n    return await FinvuModule.discoverAccounts(fipId, fiTypes, mobileNumber);\n  } catch (e) {\n    console.error('Discovering accounts failed:', e);\n    return undefined;\n  }\n}\n\nexport async function linkAccounts(finvuAccounts: any[], finvuFipDetails: any) {\n  try {\n    return await FinvuModule.linkAccounts(finvuAccounts, finvuFipDetails);\n  } catch (e) {\n    console.error('Linking accounts failed:', e);\n    return undefined;\n  }\n}\n\nexport async function confirmAccountLinking(referenceNumber: string, otp: string) {\n  try {\n    return await FinvuModule.confirmAccountLinking(referenceNumber, otp);\n  } catch (e) {\n    console.error('Confirming account linking failed:', e);\n    return undefined;\n  }\n}\n\nexport async function approveConsentRequest(consentDetails: any, finvuLinkedAccounts: any[]) {\n  try {\n    return await FinvuModule.approveConsentRequest(consentDetails, finvuLinkedAccounts);\n  } catch (e) {\n    console.error('Approving consent failed:', e);\n    return undefined;\n  }\n}\n\nexport async function denyConsentRequest(consentRequestDetailInfo: any) {\n  try {\n    return await FinvuModule.denyConsentRequest(consentRequestDetailInfo);\n  } catch (e) {\n    console.error('Denying consent failed:', e);\n    return undefined;\n  }\n}\n\n// Event listeners\nexport function addChangeListener(listener: (event: any) => void): EventSubscription {\n  return emitter.addListener('onChange', listener);\n}\n\nexport { default } from './FinvuModule';\nexport * from './Finvu.types';\n"]}